{"version":3,"file":"component---src-templates-posts-index-tsx-18a97b5b17c1ac31dcfb.js","mappings":"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","sources":["webpack://QUESTechBlog/./src/components/card/Preview/index.tsx","webpack://QUESTechBlog/./src/components/Pagination/index.tsx","webpack://QUESTechBlog/./src/templates/Posts/index.tsx"],"sourcesContent":["import React from 'react';\nimport moment from 'moment-timezone';\n\nimport TagLabel from 'components/label/Tag';\n\nimport './index.scss';\nimport { Link } from 'gatsby';\n\ntype Props = {\n  image?: string;\n  title: string;\n  tags: { id: string; name: string }[];\n  writeAt: string;\n};\n\nfunction PreviewCard({ image, title, tags, writeAt }: Props) {\n  return (\n    <Link className='preview-card' to={`/post/${title}`}>\n      <img\n        className='preview-card__image'\n        src={image || 'https://dummyimage.com/1024x800/000/fff'}\n        alt='preview'\n      />\n\n      <div className='preview-card__body'>\n        <div className='preview-card__title'>{title || '제목없음'}</div>\n        {writeAt ? (\n          <p className='preview-card__description'>\n            {/* eslint-disable-next-line newline-per-chained-call */}\n            {moment(writeAt).tz('Asia/Seoul').format('YYYY.MM.DD')}\n          </p>\n        ) : (\n          <></>\n        )}\n        <div className='preview-card__tags'>\n          {tags?.map((tag, index) => (\n            <TagLabel tag={tag} key={`${tag}-${index}`} />\n          ))}\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default PreviewCard;\n","import React from 'react';\n\nimport './index.scss';\n\ntype Props = {\n  page: number;\n  endPage: number;\n  onClick: (page: number) => void;\n};\n\nfunction getPages(nowPage: number, endPage: number) {\n  if (endPage <= 5) {\n    const pages = Array.from({ length: endPage }, (_, index) => index + 1);\n    return pages;\n  }\n\n  if (nowPage <= 3) {\n    const pages = Array.from({ length: 5 }, (_, index) => index + 1);\n    return pages;\n  }\n\n  if (nowPage >= endPage - 2) {\n    const pages = Array.from({ length: 5 }, (_, index) => endPage - 4 + index);\n    return pages;\n  }\n\n  const pages = Array.from({ length: 5 }, (_, index) => nowPage - 2 + index);\n  return pages;\n}\n\nfunction Pagination({ page, endPage, onClick }: Props) {\n  const pages: number[] = getPages(page, endPage);\n\n  return (\n    <div className='pagination'>\n      <button\n        className='pagination__button pagination__button--prev'\n        type='button'\n        // endPage < page: When user enter page number in browser manually.\n        disabled={endPage < 1 || endPage < page || page <= 1}\n        onClick={() => {\n          if (endPage < 1 || endPage < page || page <= 1) {\n            return;\n          }\n          onClick(page - 1);\n        }}\n      >\n        <i className='material-icons'>chevron_left</i>\n      </button>\n\n      {pages.map((pageNum) => {\n        const isNowPage = pageNum === page;\n        return (\n          <button\n            key={`pagination-${pageNum}`}\n            className={`pagination__button pagination__button--page ${\n              isNowPage ? 'pagination__button--selected' : ''\n            }`}\n            type='button'\n            disabled={isNowPage}\n            onClick={() => onClick(pageNum)}\n          >\n            {pageNum}\n          </button>\n        );\n      })}\n\n      <button\n        className='pagination__button pagination__button--next'\n        type='button'\n        disabled={page >= endPage}\n        onClick={() => {\n          onClick(page + 1);\n        }}\n      >\n        <i className='material-icons'>navigate_next</i>\n      </button>\n    </div>\n  );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { graphql, navigate } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport PreviewCard from 'components/card/Preview';\nimport Pagination from 'components/Pagination';\nimport SEOHelmet from 'components/helmet/SEO';\n\nimport './index.scss';\n\nexport default function Template({\n  data,\n  pageContext,\n}: {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          id: string;\n          frontmatter: {\n            title: string;\n            tags: { id: string; name: string }[];\n            date: string;\n            preview?: { external?: { url?: string } }[];\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n}) {\n  return (\n    <Layout>\n      <SEOHelmet\n        title='QUES 기술 블로그'\n        description='퀘스 QUES 개발팀 기술블로그'\n        image='https://avatars.githubusercontent.com/u/76085248?s=200&v=4'\n        url='https://quesdevteam.github.io/posts'\n      />\n      <Container>\n        <div className='posts-container'>\n          {data.allMarkdownRemark.edges.map(\n            ({\n              node,\n            }: {\n              node: {\n                id: string;\n                frontmatter: {\n                  title: string;\n                  tags: { id: string; name: string }[];\n                  date: string;\n                  preview?: { external?: { url?: string } }[];\n                };\n              };\n            }) => (\n              <PreviewCard\n                key={`article-${node.frontmatter.title}`}\n                tags={node.frontmatter.tags ?? []}\n                title={node.frontmatter.title}\n                writeAt={node.frontmatter.date}\n                image={node.frontmatter.preview?.[0]?.external?.url}\n              />\n            ),\n          )}\n        </div>\n      </Container>\n\n      <Pagination\n        endPage={pageContext.numPages}\n        page={pageContext.currentPage}\n        onClick={(page) => navigate(`/posts/${page}`)}\n      />\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(filter: { frontmatter: { post: { eq: true } } }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            post\n            tags {\n              color\n              id\n              name\n            }\n            preview {\n              external {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["image","title","tags","writeAt","React","Link","className","to","src","alt","moment","tz","format","map","tag","index","TagLabel","key","page","endPage","onClick","pages","nowPage","Array","from","length","_","getPages","type","disabled","pageNum","isNowPage","Template","data","pageContext","Layout","SEOHelmet","description","url","Container","allMarkdownRemark","edges","node","PreviewCard","frontmatter","date","preview","_node$frontmatter$pre","_node$frontmatter$pre2","external","_node$frontmatter$pre3","Pagination","numPages","currentPage","navigate"],"sourceRoot":""}