{"version":3,"file":"component---src-pages-index-tsx-2bb07731b66117e99318.js","mappings":"+KA6CA,IA7BA,YAA8D,IAAvCA,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QACzC,OACEC,EAAAA,cAACC,EAAAA,GAAD,CAAMC,UAAU,eAAeC,GAAE,UAAWC,EAAAA,EAAAA,GAAkBP,IAC5DG,EAAAA,cAAAA,MAAAA,CACEE,UAAU,sBACVG,IAAKT,GAAS,0CACdU,IAAI,YAGNN,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,sBACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,uBAAuBL,GAAS,QAC9CE,EACCC,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,6BAEVK,GAAAA,CAAOR,GAASS,GAAG,cAAcC,OAAO,eAG3CT,EAAAA,cAAAA,EAAAA,SAAAA,MAEFA,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,sBACZJ,MAAAA,OADH,EACGA,EAAMY,KAAI,SAACC,EAAKC,GAAN,OACTZ,EAAAA,cAACa,EAAAA,EAAD,CAAUF,IAAKA,EAAKG,IAAQH,EAAL,IAAYC,Y,oGCzB/C,MARA,WACE,OACEZ,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,aACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,2B,8BCGN,SAASa,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAe,cA2B5B,OACEjB,EAAAA,cAACkB,EAAAA,EAAD,KACElB,EAAAA,cAACmB,EAAAA,EAAD,CACEtB,MAAM,cACNuB,YAAY,oBACZxB,MAAM,6DACNyB,IAAI,mCAENrB,EAAAA,cAACsB,EAAD,MACAtB,EAAAA,cAACuB,EAAAA,EAAD,KACEvB,EAAAA,cAAAA,MAAAA,CAAKwB,MAAO,CAAEC,SAAU,OAAQC,QAAS,OAAQC,cAAe,QAC7DX,EAAKY,kBAAkBC,MAAMnB,KAC5B,wBACEoB,EADF,EACEA,KADF,OAYE9B,EAAAA,cAAC+B,EAAAA,EAAD,CACEjB,IAAG,WAAagB,EAAKE,YAAYnC,MACjCC,KAAI,UAAEgC,EAAKE,YAAYlC,YAAnB,QAA2B,GAC/BD,MAAOiC,EAAKE,YAAYnC,MACxBE,QAAS+B,EAAKE,YAAYC,KAC1BrC,MAAK,UAAEkC,EAAKE,YAAYE,eAAnB,iBAAEC,EAA2B,UAA7B,iBAAEC,EAA+BC,gBAAjC,aAAEC,EAAyCjB","sources":["webpack://QUESTechBlog/./src/components/card/Preview/index.tsx","webpack://QUESTechBlog/./src/components/Jumbotron/index.tsx","webpack://QUESTechBlog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport moment from 'moment-timezone';\n\nimport TagLabel from 'components/label/Tag';\n\nimport './index.scss';\nimport { Link } from 'gatsby';\nimport { parseTitleForPath } from 'utils/text-parser';\n\ntype Props = {\n  image?: string;\n  title: string;\n  tags: { id: string; name: string }[];\n  writeAt: string;\n};\n\nfunction PreviewCard({ image, title, tags, writeAt }: Props) {\n  return (\n    <Link className='preview-card' to={`/post/${parseTitleForPath(title)}`}>\n      <img\n        className='preview-card__image'\n        src={image || 'https://dummyimage.com/1024x800/000/fff'}\n        alt='preview'\n      />\n\n      <div className='preview-card__body'>\n        <div className='preview-card__title'>{title || '제목없음'}</div>\n        {writeAt ? (\n          <p className='preview-card__description'>\n            {/* eslint-disable-next-line newline-per-chained-call */}\n            {moment(writeAt).tz('Asia/Seoul').format('YYYY.MM.DD')}\n          </p>\n        ) : (\n          <></>\n        )}\n        <div className='preview-card__tags'>\n          {tags?.map((tag, index) => (\n            <TagLabel tag={tag} key={`${tag}-${index}`} />\n          ))}\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default PreviewCard;\n","import React from 'react';\n\nimport './index.scss';\n\nfunction HomeJumbotron() {\n  return (\n    <div className='jumbotron'>\n      <div className='jumbotron__container' />\n    </div>\n  );\n}\n\nexport default HomeJumbotron;\n","import React from 'react';\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport Jumbotron from 'components/Jumbotron';\nimport { Container } from 'react-bootstrap';\nimport PreviewCard from 'components/card/Preview';\nimport SEOHelmet from 'components/helmet/SEO';\n\nexport default function Home() {\n  const data = useStaticQuery(\n    graphql`\n      query MyQuery {\n        allMarkdownRemark(filter: { frontmatter: { post: { eq: true } } }) {\n          edges {\n            node {\n              frontmatter {\n                title\n                date\n                tags {\n                  color\n                  id\n                  name\n                }\n                preview {\n                  external {\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  return (\n    <Layout>\n      <SEOHelmet\n        title='QUES 기술 블로그'\n        description='퀘스 QUES 개발팀 기술블로그'\n        image='https://avatars.githubusercontent.com/u/76085248?s=200&v=4'\n        url='https://quesdevteam.github.io/'\n      />\n      <Jumbotron />\n      <Container>\n        <div style={{ flexWrap: 'wrap', display: 'flex', flexDirection: 'row' }}>\n          {data.allMarkdownRemark.edges.map(\n            ({\n              node,\n            }: {\n              node: {\n                frontmatter: {\n                  title: string;\n                  tags: { id: string; name: string }[];\n                  date: string;\n                  preview?: { external?: { url?: string } }[];\n                };\n              };\n            }) => (\n              <PreviewCard\n                key={`article-${node.frontmatter.title}`}\n                tags={node.frontmatter.tags ?? []}\n                title={node.frontmatter.title}\n                writeAt={node.frontmatter.date}\n                image={node.frontmatter.preview?.[0]?.external?.url}\n              />\n            ),\n          )}\n        </div>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["image","title","tags","writeAt","React","Link","className","to","parseTitleForPath","src","alt","moment","tz","format","map","tag","index","TagLabel","key","Home","data","useStaticQuery","Layout","SEOHelmet","description","url","Jumbotron","Container","style","flexWrap","display","flexDirection","allMarkdownRemark","edges","node","PreviewCard","frontmatter","date","preview","_node$frontmatter$pre","_node$frontmatter$pre2","external","_node$frontmatter$pre3"],"sourceRoot":""}