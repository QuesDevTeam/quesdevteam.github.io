{"version":3,"file":"component---src-templates-posts-index-tsx-f77944ba00cceae46d97.js","mappings":"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","sources":["webpack://QUESTechBlog/./src/components/card/Preview/index.tsx","webpack://QUESTechBlog/./src/components/Pagination/index.tsx","webpack://QUESTechBlog/./src/templates/Posts/index.tsx"],"sourcesContent":["import React from 'react';\nimport moment from 'moment-timezone';\n\nimport TagLabel from 'components/label/Tag';\n\nimport './index.scss';\nimport { Link } from 'gatsby';\nimport { parseTitleForPath } from 'utils/text-parser';\n\ntype Props = {\n  image?: string;\n  title: string;\n  tags: { id: string; name: string }[];\n  writer: string;\n  writeAt: string;\n};\n\nfunction PreviewCard({ image, title, tags, writer, writeAt }: Props) {\n  return (\n    <Link className='preview-card' to={`/post/${parseTitleForPath(title)}`}>\n      {image ? (\n        <img className='preview-card__image' src={image} alt='preview' />\n      ) : (\n        <div className='preview-card__image'>\n          <div className='preview-card__image__title'>{title}</div>\n        </div>\n      )}\n\n      <div className='preview-card__body'>\n        <div className='preview-card__title'>{title || '제목없음'}</div>\n        {writer || writeAt ? (\n          <p className='preview-card__description'>\n            {moment(writeAt).tz('Asia/Seoul').format('YYYY.MM.DD')}\n            {writer && ` ・ ${writer}`}\n          </p>\n        ) : (\n          <></>\n        )}\n        <div className='preview-card__tags'>\n          {tags?.map((tag, index) => (\n            <TagLabel tag={tag} key={`${tag}-${index}`} />\n          ))}\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default PreviewCard;\n","import React from 'react';\n\nimport './index.scss';\n\ntype Props = {\n  page: number;\n  endPage: number;\n  onClick: (page: number) => void;\n};\n\nfunction getPages(nowPage: number, endPage: number) {\n  if (endPage <= 5) {\n    const pages = Array.from({ length: endPage }, (_, index) => index + 1);\n    return pages;\n  }\n\n  if (nowPage <= 3) {\n    const pages = Array.from({ length: 5 }, (_, index) => index + 1);\n    return pages;\n  }\n\n  if (nowPage >= endPage - 2) {\n    const pages = Array.from({ length: 5 }, (_, index) => endPage - 4 + index);\n    return pages;\n  }\n\n  const pages = Array.from({ length: 5 }, (_, index) => nowPage - 2 + index);\n  return pages;\n}\n\nfunction Pagination({ page, endPage, onClick }: Props) {\n  const pages: number[] = getPages(page, endPage);\n\n  return (\n    <div className='pagination'>\n      <button\n        className='pagination__button pagination__button--prev'\n        type='button'\n        disabled={endPage < 1 || endPage < page || page <= 1}\n        onClick={() => {\n          if (endPage < 1 || endPage < page || page <= 1) {\n            return;\n          }\n          onClick(page - 1);\n        }}\n      >\n        <i className='material-icons'>chevron_left</i>\n      </button>\n\n      {pages.map((pageNum) => {\n        const isNowPage = pageNum === page;\n        return (\n          <button\n            key={`pagination-${pageNum}`}\n            className={`pagination__button pagination__button--page ${\n              isNowPage ? 'pagination__button--selected' : ''\n            }`}\n            type='button'\n            disabled={isNowPage}\n            onClick={() => onClick(pageNum)}\n          >\n            {pageNum}\n          </button>\n        );\n      })}\n\n      <button\n        className='pagination__button pagination__button--next'\n        type='button'\n        disabled={page >= endPage}\n        onClick={() => {\n          onClick(page + 1);\n        }}\n      >\n        <i className='material-icons'>navigate_next</i>\n      </button>\n    </div>\n  );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { graphql, navigate } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport PreviewCard from 'components/card/Preview';\nimport Pagination from 'components/Pagination';\nimport SEOHelmet from 'components/helmet/SEO';\n\nimport './index.scss';\n\nexport default function Template({\n  data,\n  pageContext,\n}: {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          id: string;\n          frontmatter: {\n            title: string;\n            tags: { id: string; name: string }[];\n            date: string;\n            writer: { name: string }[];\n            preview?: { external?: { url?: string } }[];\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n}) {\n  return (\n    <Layout>\n      <SEOHelmet\n        title='QUES 기술 블로그'\n        description='퀘스 QUES 개발팀 기술블로그'\n        image='https://avatars.githubusercontent.com/u/76085248?s=200&v=4'\n        url='https://quesdevteam.github.io/posts'\n      />\n      <Container className='posts-container'>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <PreviewCard\n            key={`article-${node.frontmatter.title}`}\n            tags={node.frontmatter.tags ?? []}\n            title={node.frontmatter.title}\n            writeAt={node.frontmatter.date}\n            writer={node.frontmatter.writer[0].name}\n            image={node.frontmatter.preview?.[0]?.external?.url}\n          />\n        ))}\n      </Container>\n\n      <Pagination\n        endPage={pageContext.numPages}\n        page={pageContext.currentPage}\n        onClick={(page) => navigate(`/posts/${page}`)}\n      />\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(filter: { frontmatter: { post: { eq: true } } }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            post\n            tags {\n              color\n              id\n              name\n            }\n            writer {\n              name\n            }\n            preview {\n              external {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","image","title","tags","writer","writeAt","React","Link","className","to","parseTitleForPath","src","alt","moment","tz","format","map","tag","index","TagLabel","key","page","endPage","onClick","pages","nowPage","Array","from","length","_","getPages","type","disabled","pageNum","isNowPage","Template","data","pageContext","Layout","SEOHelmet","description","url","Container","allMarkdownRemark","edges","_ref2","_node$frontmatter$tag","_node$frontmatter$pre","_node$frontmatter$pre2","_node$frontmatter$pre3","node","PreviewCard","frontmatter","date","name","preview","external","Pagination","numPages","currentPage","navigate"],"sourceRoot":""}