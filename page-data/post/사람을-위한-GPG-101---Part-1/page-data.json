{"componentChunkName":"component---src-templates-markdown-index-tsx","path":"/post/사람을-위한-GPG-101---Part-1","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"사람을 위한 GPG 101 - Part 1","date":"2023-06-02T04:39:00.000Z","tags":[{"color":"green","id":"de94541b-72d6-4d39-9faf-31ce50fb80ba","name":"GPG"},{"color":"default","id":"ac7e97ce-f8b6-49ae-999e-e926f8c5450f","name":"PGP"}],"preview":[],"writer":[{"name":"DongHyun Jung"}]},"excerpt":"대체 GPG가 뭔가요 내가 누구인지를 Signing/서명 을 통해 증명할 때 Git 커밋의 Verified 마크\n 도커 설치할 때 항상 나를 귀찮게 하는 gpg/keyring/repo…","html":"<h2>대체 GPG가 뭔가요</h2>\n<ul>\n<li>\n<p>내가 누구인지를 <strong>Signing/서명</strong> 을 통해 증명할 때</p>\n</li>\n<li>\n<p>Git 커밋의 Verified 마크\n<img src=\"https://bk-ques-blog-resources.s3.ap-northeast-2.amazonaws.com/signing_commit.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p>도커 설치할 때 항상 나를 귀찮게 하는 gpg/keyring/repo등도 “이 파일이 진짜 도커 엔진인지” 체크하는 과정의 일부이다\n<img src=\"https://bk-ques-blog-resources.s3.ap-northeast-2.amazonaws.com/vd_asdfzxcv.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p>파일/메시지 등의 <strong>암호화/복호화</strong> 할 때</p>\n</li>\n<li>\n<p>우리에게 친숙한 비대칭키 암호화다. 다만 GPG 툴을 사용해 커맨드라인으로 편하게 할 뿐이다.</p>\n</li>\n<li>\n<p>“나는 이 사람을 신뢰하겠다”같이 어떤 사람의 public 키를 <strong>보증</strong>할 때</p>\n</li>\n<li>\n<p>기존 SSH키를 대체할 <strong>인증</strong>의 수단으로도 사용</p>\n</li>\n<li>\n<p>비교적 새로운 사용법이라 아직 많이 쓰이지는 않음</p>\n</li>\n</ul>\n<h2>왜 이렇게 많은가: GPG, PGP, OpenPGP</h2>\n<h3>PGP</h3>\n<ul>\n<li>1991년에 나온 암호화 <strong>프로그램</strong>이다</li>\n<li><strong>P</strong>retty <strong>G</strong>ood <strong>P</strong>rivacy의 약자이다</li>\n<li>특허 문제로 사람들이 편하게 못 씀</li>\n</ul>\n<h4>OpenPGP</h4>\n<ul>\n<li>프로그램이 아닙니다</li>\n<li>위에서 나온 PGP 프로그램의 Open standard</li>\n<li>PGP의 특허 문제를 해결하기 위해 만들어졌다</li>\n</ul>\n<h4>GPG, aka GnuPG</h4>\n<ul>\n<li><strong>GNU</strong> <strong>P</strong>rivacy <strong>G</strong>uard의 약자이다</li>\n<li>GNU라는 집단이 OpenPGP 규약에 따라 만든 프로그램</li>\n</ul>\n<h2>어떻게 돌아가는가</h2>\n<ul>\n<li>비대칭 암호화라는 마법(aka 수학)을 사용</li>\n<li>한 key를 사용해 암호화/서명, 대응되는 key를 사용해 복호화/검증</li>\n<li>GPG의 모든 개념은 비대칭키를 사용해 수행된다. 그 안에서 나오는 모든 개념들은 사람의 해석일 뿐이다.</li>\n</ul>\n<h2>큰 그림</h2>\n<ul>\n<li>\n<p>GPG키를 잃어버리거나 도둑맞는 경우, 피해는 너무도 크다</p>\n</li>\n<li>\n<p>그렇기 때문에, <strong>Primary key</strong>와 <strong>Sub keys</strong>를 용도에 맞게 사용한다</p>\n</li>\n<li>\n<p>Primary key</p>\n</li>\n<li>\n<p>이 키는 당신의 신분을 나타낸다</p>\n</li>\n<li>\n<p>GnuPG를 사용할 때 자동으로 만들어진다</p>\n</li>\n<li>\n<p>Sub key들을 만들 때, 각 sub key들을 서명하고 보증하는 용도로만 사용된다</p>\n</li>\n<li>\n<p>Sub key들을 다 만든 후에는 어딘가에 안전하게 보관하세요</p>\n</li>\n<li>\n<p>길고 복잡한 암호를 설정하는 편이 좋다(보안)</p>\n</li>\n<li>\n<p>Sub key</p>\n</li>\n<li>\n<p>매일매일 사용할 키이다</p>\n</li>\n<li>\n<p>일반적으로 불리는 GPG키는 이 Sub key 들이라고 생각하는게 편할 겁니다</p>\n</li>\n<li>\n<p>Primary key보다 더 짧고 쉬운 비밀번호를 사용할 수 있다</p>\n</li>\n<li>\n<p>In case of breach, you can revoke it and re-generate using primary key</p>\n</li>\n<li>\n<p>문제가 생긴 경우, 키를 없에서(revoke) 새로 발급할 수 있다</p>\n</li>\n</ul>\n<h3>실제로 해봅시다</h3>\n<h4>GnuPG 설치</h4>\n<ul>\n<li>MacOS: <code>brew install gnupg</code></li>\n<li>Ubuntu: <code>apt-get install gnupg</code></li>\n<li>Arch: <code>pacman -S gnupg</code></li>\n</ul>\n<h4>설정</h4>\n<ul>\n<li>아래 토글 안의 내용을 <code>$HOME/.gnupg</code> 폴더에 복사</li>\n</ul>\n<details><summary>~/.gnupg/gpg.conf</summary>\n```plain text\n# Tell GnuPG that I want maximum OpenPGP conformance.\nopenpgp\n<h1>Disable a few messages from GnuPG that I know I don’t need.</h1>\n<h1>no-greeting</h1>\n<h1>no-secmem-warning</h1>\n<h1>Don’t include a version number or a comment in my output.</h1>\n<p>no-emit-version</p>\n<h1>no-comments</h1>\n<h1>Use full 16-character key IDs, not short 8-character key IDs.</h1>\n<p>keyid-format long</p>\n<h1>Use the global keyserver network for certificate lookups.</h1>\n<h1>Further, whenever I send or receive something to/from the</h1>\n<h1>keyserver network, clean up what I get or send.</h1>\n<h1>keyserver pool.sks-keyservers.net</h1>\n<p>keyserver-options import-clean-sigs import-clean-uids export-clean-sigs export-clean-uids</p>\n<h1>If I don’t explicitly state which certificate to use, use this one.</h1>\n<h1>default-key 1DCBDC01B44427C7</h1>\n<h1>Always include signatures from these two certificates.</h1>\n<h1>local-user 1DCBDC01B44427C7</h1>\n<h1>Always add these two certificates to my recipients list.</h1>\n<h1>encrypt-to 1DCBDC01B44427C7</h1>\n<h1>Turn \"From\" into \"> From\", in order to play nice with UNIX mailboxes.</h1>\n<p>escape-from-lines</p>\n<h1>Message digest algorithm used when signing a key</h1>\n<p>cert-digest-algo SHA512</p>\n<h1>Prefer strong hashes whenever possible.</h1>\n<p>personal-digest-preferences SHA512 SHA384 SHA256 SHA224</p>\n<h1>Prefer more modern ciphers over older ones.</h1>\n<p>personal-cipher-preferences CAMELLIA256 AES256 TWOFISH CAMELLIA192 AES192 CAMELLIA128 AES BLOWFISH CAST5 3DES</p>\n<h1>Turn up the compression level and prefer BZIP2 over ZIP and ZLIB.</h1>\n<p>bzip2-compress-level 9\ncompress-level 9\npersonal-compress-preferences BZIP2 ZIP ZLIB</p>\n<pre><code>\n&#x3C;/details>\n#### GPG키 생성\n> 시연을 위해 1024 bit 키 사이즈를 사용했습니다만, 실제로 사용할 때는 현재 사용할 수 있는 가장 긴 키 사이즈를 사용하세요\n\n```plain text\n$ gpg --full-gen-key\n\n</code></pre>\n<pre><code class=\"language-plain\" data-meta=\"text\">Please select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\n  (14) Existing key from card\nYour selection? 1\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (3072) 1024\nRequested keysize is 1024 bits\nPlease specify how long the key should be valid.\n         0 = key does not expire\n      &#x3C;n>  = key expires in n days\n      &#x3C;n>w = key expires in n weeks\n      &#x3C;n>m = key expires in n months\n      &#x3C;n>y = key expires in n years\nKey is valid for? (0) 0\nKey does not expire at all\nIs this correct? (y/N) y\n\nGnuPG needs to construct a user ID to identify your key.\n\nReal name: asdf\nEmail address: asdf@youremail.tld\nComment:\nYou selected this USER-ID:\n    \"asdf &#x3C;asdf@youremail.tld>\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O\n\n</code></pre>\n<ul>\n<li>At this point, GnuPG will ask you for a passphrase. Choose wisely</li>\n<li>이 단계에서 비밀번호를 설정 합니다. 신중하게 충분히 복잡한 비밀번호를 사용하세요.</li>\n<li>결과</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">...\ngpg: revocation certificate stored as '/root/.gnupg/openpgp-revocs.d/268ABC813733FCB4C1A4DAB3DE6B16ACCE2B7789.rev'\npublic and secret key created and signed.\n\npub   rsa1024/DE6B16ACCE2B7789 2023-06-02 [SC]\n      268ABC813733FCB4C1A4DAB3DE6B16ACCE2B7789\nuid                            asdf &#x3C;asdf@youremail.tld>\nsub   rsa1024/145F55C942053D95 2023-06-02 [E]\n\n</code></pre>\n<h4>Sub key들 생성</h4>\n<pre><code class=\"language-plain\" data-meta=\"text\">$ gpg --edit-key YOUR_NAME_OR_KEY_ID\n# For example:\n$ gpg --edit-key asdf\n$ gpg --edit-key DE6B16ACCE2B7789\n\n</code></pre>\n<pre><code class=\"language-plain\" data-meta=\"text\">Secret key is available.\n\nsec  rsa1024/DE6B16ACCE2B7789\n     created: 2023-06-02  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa1024/145F55C942053D95\n     created: 2023-06-02  expires: never       usage: E\n[ultimate] (1). asdf &#x3C;asdf@youremail.tld>\n\ngpg> addkey\nPlease select what kind of key you want:\n   (3) DSA (sign only)\n   (4) RSA (sign only)\n   (5) Elgamal (encrypt only)\n   (6) RSA (encrypt only)\n  (14) Existing key from card\nYour selection? 4\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (3072) 1024\nRequested keysize is 1024 bits\nPlease specify how long the key should be valid.\n         0 = key does not expire\n      &#x3C;n>  = key expires in n days\n      &#x3C;n>w = key expires in n weeks\n      &#x3C;n>m = key expires in n months\n      &#x3C;n>y = key expires in n years\nKey is valid for? (0) 0\nKey does not expire at all\nIs this correct? (y/N) y\nReally create? (y/N) y\n\n...\n\nsec  rsa1024/DE6B16ACCE2B7789\n     created: 2023-06-02  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa1024/145F55C942053D95\n     created: 2023-06-02  expires: never       usage: E\nssb  rsa1024/7DD531DF7C01216A\n     created: 2023-06-02  expires: never       usage: S\n[ultimate] (1). asdf &#x3C;asdf@youremail.tld>\n\ngpg> save\n\n</code></pre>\n<ul>\n<li>생성된 키 리스트 확인</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">$ gpg --list-keys  # shortcut: -k\n$ gpg --list-secret-keys  # shortcut: -K\n</code></pre>\n<ul>\n<li>Output</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">pub   rsa1024/61D66B8D31BD01F9 2023-06-02 [SC]\n      CF78AF6A45E92DAF10479CD661D66B8D31BD01F9\nuid                 [ultimate] qwerasdf &#x3C;qwerasdf@yourdomain.tld>\nsub   rsa1024/79C816CE3A8FF83B 2023-06-02 [E]\nsub   rsa1024/23EBD2E4A68E30C1 2023-06-02 [S]\n\n</code></pre>\n<pre><code class=\"language-plain\" data-meta=\"text\">sec   rsa1024/61D66B8D31BD01F9 2023-06-02 [SC]\n      CF78AF6A45E92DAF10479CD661D66B8D31BD01F9\nuid                 [ultimate] qwerasdf &#x3C;qwerasdf@yourdomain.tld>\nssb   rsa1024/79C816CE3A8FF83B 2023-06-02 [E]\nssb   rsa1024/23EBD2E4A68E30C1 2023-06-02 [S]\n\n</code></pre>\n<h4>이게 무슨 뜻이죠?</h4>\n<ul>\n<li>pub: Public key</li>\n<li>sub: Sub key</li>\n<li>sec: Secret key</li>\n<li>ssb: Secret sub key</li>\n<li>61D66B8D31BD01F9: Key ID</li>\n<li>CF78AF6A45E92DAF10479CD661D66B8D31BD01F9: Fingerprint</li>\n</ul>\n<h4>키 백업</h4>\n<ul>\n<li>아래 커맨드를 실행한 후 나오는 결과 파일들을 안전한 곳에 보관하세요</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">$ gpg -a --export > pub.asc\n$ gpg -a --export-secret-keys > priv.asc\n\n</code></pre>\n<ul>\n<li>Sub key를 추가하거나 다른 문제가 생긴 경우, 아래처럼 복원하세요:</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">gpg --import myprivatekeys.asc\ngpg --import mypubkeys.asc\n\n</code></pre>\n<h4>Primary Secret Key 제거</h4>\n<ul>\n<li>왜냐고요? 위 #Setup 섹션을 보세요</li>\n<li>주의: PRIMARY KEY ID 뒤에 느낌표를 붙이세요</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">$ gpg --delete-secret-key PRIMARY_KEY_ID!\n# For example:\n$ gpg --delete-secret-key DE6B16ACCE2B7789!\n\n</code></pre>\n<h4>Change Passphrase</h4>\n<ul>\n<li>왜냐고요? 위 #Setup 섹션을 보세요</li>\n</ul>\n<pre><code class=\"language-plain\" data-meta=\"text\">$ gpg --change-passphrase YOUR_NAME\n\n</code></pre>\n<ul>\n<li>제일 처음 넣은 비밀번호를 입력해 인증</li>\n<li>그 후, 사용하기 쉬운 새 비밀번호를 입력</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://rgoulter.com/blog/posts/programming/2022-06-10-a-visual-explanation-of-gpg-subkeys.html\">https://rgoulter.com/blog/posts/programming/2022-06-10-a-visual-explanation-of-gpg-subkeys.html</a></li>\n<li><a href=\"https://davesteele.github.io/gpg/2014/09/20/anatomy-of-a-gpg-key/\">https://davesteele.github.io/gpg/2014/09/20/anatomy-of-a-gpg-key/</a></li>\n<li><a href=\"https://davesteele.github.io/gpg/2015/08/01/intermediate-gpg/\">https://davesteele.github.io/gpg/2015/08/01/intermediate-gpg/</a></li>\n<li><a href=\"https://keys.openpgp.org/search?q=26A987650243B28802524E2F809FD0D502E2F695\">https://keys.openpgp.org/search?q=26A987650243B28802524E2F809FD0D502E2F695</a></li>\n<li><a href=\"https://wiki.debian.org/Subkeys\">https://wiki.debian.org/Subkeys</a></li>\n<li><a href=\"https://gpg.wtf/\">https://gpg.wtf/</a></li>\n<li><a href=\"https://access.redhat.com/solutions/2115511\">https://access.redhat.com/solutions/2115511</a></li>\n</ul>"}}]}},"pageContext":{"title":"사람을 위한 GPG 101 - Part 1","id":"264ad2fc-b586-5dbe-8110-ae229d9f2dcc"}},"staticQueryHashes":[]}